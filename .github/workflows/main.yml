name: Build and Push R2DT Docker image

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'  # Push events to tags matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches:
      - main
      - develop

permissions:
  pull-requests: write

jobs:
  initial-notification:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Initial notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_MESSAGE: 'Creating image in Docker Hub'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          MSG_MINIMAL: true

  create-docker-tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: rnacentral/r2dt
          flavor: latest=false
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=pr
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.docker_meta.outputs.tags }}

      - name: Find comment for image tags
        uses: peter-evans/find-comment@v3
        if: github.event_name == 'pull_request'
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Docker image tag(s) pushed

      - name: Create or update comment for image tags
        uses: peter-evans/create-or-update-comment@v4
        if: github.event_name == 'pull_request'
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Docker image tag(s) pushed:
            ```text
            ${{ steps.docker_meta.outputs.tags }}
            ```
            Labels added to images:
            ```text
            ${{ steps.docker_meta.outputs.labels }}
            ```
          edit-mode: replace

  final-notification:
    runs-on: ubuntu-latest
    needs: create-docker-tag
    steps:
      - uses: actions/checkout@v4

      - name: Final notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_MESSAGE: 'New image created in Docker Hub'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          MSG_MINIMAL: true
