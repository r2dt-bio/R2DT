name: Build and Push R2DT Docker image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - develop


permissions:
  pull-requests: write
  actions: read    # Required to query workflow status
  contents: read  # Required for checkout and git diff

jobs:
  initial-notification:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Initial notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_MESSAGE: 'Creating image in Docker Hub'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          MSG_MINIMAL: true

  create-docker-tag:
    runs-on: ubuntu-latest
    if: |
      github.event_name != 'pull_request' ||
      !contains(github.event.pull_request.title, '[skip ci]')
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: rnacentral/r2dt
          flavor: latest=false
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=pr
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Wait for base image if needed
        if: github.event_name == 'pull_request'
        run: |
          echo "Checking for base image rnacentral/r2dt-base:pr-${{ github.event.pull_request.number }}"
          attempt=1
          max_attempts=45
          while [ $attempt -le $max_attempts ]; do
            # Check base image workflow status
            workflow_info=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/actions/runs?event=pull_request&branch=${{ github.head_ref }}" | \
              jq -r '.workflow_runs[] | select(.name == "Build and Push Base Docker image (parallel)") | {status: .status, conclusion: .conclusion}')

            status=$(echo "$workflow_info" | jq -r '.status')
            conclusion=$(echo "$workflow_info" | jq -r '.conclusion')

            # Circuit breaker: abort if base image workflow failed or was cancelled
            if [ "$status" = "completed" ] && ([ "$conclusion" = "failure" ] || [ "$conclusion" = "cancelled" ]); then
              echo "Base image workflow $conclusion - aborting"
              exit 1
            fi

            # Check if image exists on DockerHub
            if docker manifest inspect rnacentral/r2dt-base:pr-${{ github.event.pull_request.number }} >/dev/null 2>&1; then
              echo "Base image found"
              break
            fi

            echo "Waiting for base image to appear (attempt $attempt/$max_attempts)..."
            sleep 60
            attempt=$((attempt + 1))
          done
          if [ $attempt -gt $max_attempts ]; then
            echo "Timeout waiting for base image"
            exit 1
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.docker_meta.outputs.tags }}
          build-args: |
            ${{ github.event_name == 'pull_request' && format('BASE_IMAGE_VERSION=pr-{0}', github.event.pull_request.number) || '' }}

      - name: Find comment for image tags
        uses: peter-evans/find-comment@v3
        if: github.event_name == 'pull_request'
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Docker image tag(s) pushed

      - name: Create or update comment for image tags
        uses: peter-evans/create-or-update-comment@v4
        if: github.event_name == 'pull_request'
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Docker image tag(s) pushed:
            ```text
            ${{ steps.docker_meta.outputs.tags }}
            ```
            Labels added to images:
            ```text
            ${{ steps.docker_meta.outputs.labels }}
            ```
          edit-mode: replace

  final-notification:
    runs-on: ubuntu-latest
    needs: create-docker-tag
    steps:
      - uses: actions/checkout@v4

      - name: Final notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_MESSAGE: 'New image created in Docker Hub'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          MSG_MINIMAL: true
