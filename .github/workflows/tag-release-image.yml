name: Tag R2DT Docker image with release version

on:
  release:
    types: [published]

jobs:
  tag-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Extract version and tag from release
        id: extract_info
        run: |
          # Get the Git tag that the release was created from
          GIT_TAG=${GITHUB_REF#refs/tags/}
          echo "git_tag=$GIT_TAG" >> $GITHUB_OUTPUT
          
          # Remove 'v' prefix if present for the version
          VERSION=${GIT_TAG#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          # Extract major.minor version
          MAJOR_MINOR=$(echo $VERSION | grep -oE '^[0-9]+\.[0-9]+')
          echo "major_minor=$MAJOR_MINOR" >> $GITHUB_OUTPUT
          
          # Determine the source Docker tag
          # If the Git tag starts with 'v', Docker tag doesn't have the 'v'
          if [[ "$GIT_TAG" == v* ]]; then
            DOCKER_SOURCE_TAG=${GIT_TAG#v}
          else
            DOCKER_SOURCE_TAG=$GIT_TAG
          fi
          echo "docker_source_tag=$DOCKER_SOURCE_TAG" >> $GITHUB_OUTPUT

      - name: Check if Docker image with tag exists
        id: check_image
        run: |
          # Try to inspect the image to see if it exists
          if docker manifest inspect rnacentral/r2dt:${{ steps.extract_info.outputs.docker_source_tag }} > /dev/null 2>&1; then
            echo "Docker image with tag ${{ steps.extract_info.outputs.docker_source_tag }} found."
          else
            echo "Error: Docker image with tag ${{ steps.extract_info.outputs.docker_source_tag }} not found."
            echo "Make sure the Docker image was built for this release tag."
            exit 1
          fi

      - name: Tag Docker image with full version
        uses: LANsible/copy-image-manifest-action@main
        with:
          source: rnacentral/r2dt:${{ steps.extract_info.outputs.docker_source_tag }}
          targets: rnacentral/r2dt:${{ steps.extract_info.outputs.version }}
          wait_platforms: linux/amd64,linux/arm64

      - name: Tag Docker image with major.minor version
        uses: LANsible/copy-image-manifest-action@main
        with:
          source: rnacentral/r2dt:${{ steps.extract_info.outputs.docker_source_tag }}
          targets: rnacentral/r2dt:${{ steps.extract_info.outputs.major_minor }}
          wait_platforms: linux/amd64,linux/arm64
          
      - name: Notify Slack about new tagged release
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_MESSAGE: 'R2DT Docker image tagged with release version ${{ steps.extract_info.outputs.version }} (from ${{ steps.extract_info.outputs.docker_source_tag }})'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          MSG_MINIMAL: true